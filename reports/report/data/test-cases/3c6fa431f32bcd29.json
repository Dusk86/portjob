{"uid":"3c6fa431f32bcd29","name":"获取token值","fullName":"test_case.testrequest.TestSendRequest#test_gettoken","historyId":"881b80c0e9dfa9f4cc80ccb30937916f","time":{"start":1702358250009,"stop":1702358253409,"duration":3400},"description":"用来描述test_gettoken这条case","descriptionHtml":"<p>用来描述test_gettoken这条case</p>\n","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_case.testrequest.TestSendRequest object at 0x000001AE1C13AFB0>\ncasein = {'name': '获取token', 'request': {'data': {'appid': 'wx6b11b3efd1cdc290', 'grant_type': 'client_credential', 'secret': '...f9529d'}, 'method': 'get', 'url': 'https://api.weixin.qq.com/cgi-bin/token'}, 'validate': {'eq': {'expires_in': 7200}}}\n\n    @pytest.mark.parametrize(\"casein\", YamlUtil().read_testcase('E:/LoginTest/data/get_token.yml', 'gettoken'))\n    # @allure.story(\"\") 子功能名称，放在用例前面。 三级目录\n    @allure.story(\"获取token\")\n    @allure.title(\"获取token值\")\n    @allure.description(\"用来描述test_gettoken这条case\")\n    @allure.step(\"测试步骤，在函数外部使用\")\n    def test_gettoken(self, casein):\n        # with allure.step(\"获取路径\"):  测试过程中的每个步骤,可以放在测试用例方法里面。在函数内部使用\n        with allure.step(\"请求地址：{}\".format(casein['request']['url'])):\n            url = casein['request']['url']\n            logger.debug(f\"请求地址=====》{url}\")\n        with allure.step(\"请求方式：{}\".format(casein['request']['method'])):\n            method = casein['request']['method']\n            logger.debug(f\"请求方式=====》{method}\")\n        # data 里面是参数，字典类型，键值对\n        with allure.step(\"获取具体数据：{}\".format(casein['request']['data'])):\n            data = casein['request']['data']\n            logger.debug(f\"请求参数=====》{data}\")\n        with allure.step(\"返回的token值：{}\".format(RequestUtil().request(url, method, data).json()['access_token'])):\n            # 请求返回的断言\n            assert_info = RequestUtil().request(url, method, data).json()['expires_in']\n            token = RequestUtil().request(url, method, data).json()['access_token']\n            logger.debug(f\"返回token值=====》{token}\")\n        # 期望的断言\n        assert_expected =casein['validate']['eq']['expires_in']\n        # # 断言判断\n>       Assertutil().assert_in_body(assert_info, assert_expected)\n\ntest_case\\testrequest.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assert_util.Assertutil object at 0x000001AE1C347FD0>\nbody = '7199', expected_body = '7200'\n\n    def assert_in_body(self, body, expected_body):\n        try:\n            body = json.dumps(body)\n            expected_body = json.dumps(expected_body)\n            print(body)\n>           assert expected_body in body\nE           AssertionError\n\ncommon\\assert_util.py:35: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"用来描述test_gettoken这条case","status":"failed","statusMessage":"AssertionError","statusTrace":"self = <test_case.testrequest.TestSendRequest object at 0x000001AE1C13AFB0>\ncasein = {'name': '获取token', 'request': {'data': {'appid': 'wx6b11b3efd1cdc290', 'grant_type': 'client_credential', 'secret': '...f9529d'}, 'method': 'get', 'url': 'https://api.weixin.qq.com/cgi-bin/token'}, 'validate': {'eq': {'expires_in': 7200}}}\n\n    @pytest.mark.parametrize(\"casein\", YamlUtil().read_testcase('E:/LoginTest/data/get_token.yml', 'gettoken'))\n    # @allure.story(\"\") 子功能名称，放在用例前面。 三级目录\n    @allure.story(\"获取token\")\n    @allure.title(\"获取token值\")\n    @allure.description(\"用来描述test_gettoken这条case\")\n    @allure.step(\"测试步骤，在函数外部使用\")\n    def test_gettoken(self, casein):\n        # with allure.step(\"获取路径\"):  测试过程中的每个步骤,可以放在测试用例方法里面。在函数内部使用\n        with allure.step(\"请求地址：{}\".format(casein['request']['url'])):\n            url = casein['request']['url']\n            logger.debug(f\"请求地址=====》{url}\")\n        with allure.step(\"请求方式：{}\".format(casein['request']['method'])):\n            method = casein['request']['method']\n            logger.debug(f\"请求方式=====》{method}\")\n        # data 里面是参数，字典类型，键值对\n        with allure.step(\"获取具体数据：{}\".format(casein['request']['data'])):\n            data = casein['request']['data']\n            logger.debug(f\"请求参数=====》{data}\")\n        with allure.step(\"返回的token值：{}\".format(RequestUtil().request(url, method, data).json()['access_token'])):\n            # 请求返回的断言\n            assert_info = RequestUtil().request(url, method, data).json()['expires_in']\n            token = RequestUtil().request(url, method, data).json()['access_token']\n            logger.debug(f\"返回token值=====》{token}\")\n        # 期望的断言\n        assert_expected =casein['validate']['eq']['expires_in']\n        # # 断言判断\n>       Assertutil().assert_in_body(assert_info, assert_expected)\n\ntest_case\\testrequest.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.assert_util.Assertutil object at 0x000001AE1C347FD0>\nbody = '7199', expected_body = '7200'\n\n    def assert_in_body(self, body, expected_body):\n        try:\n            body = json.dumps(body)\n            expected_body = json.dumps(expected_body)\n            print(body)\n>           assert expected_body in body\nE           AssertionError\n\ncommon\\assert_util.py:35: AssertionError","steps":[{"name":"测试步骤，在函数外部使用","time":{"start":1702358250009,"stop":1702358253378,"duration":3369},"status":"failed","statusMessage":"AssertionError\n","statusTrace":"  File \"E:\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"E:\\LoginTest\\test_case\\testrequest.py\", line 56, in test_gettoken\n    Assertutil().assert_in_body(assert_info, assert_expected)\n  File \"E:\\LoginTest\\common\\assert_util.py\", line 35, in assert_in_body\n    assert expected_body in body\n","steps":[{"name":"请求地址：https://api.weixin.qq.com/cgi-bin/token","time":{"start":1702358250009,"stop":1702358250009,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"请求方式：get","time":{"start":1702358250009,"stop":1702358250010,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"获取具体数据：{'grant_type': 'client_credential', 'appid': 'wx6b11b3efd1cdc290', 'secret': '106a9c6157c4db5f6029918738f9529d'}","time":{"start":1702358250010,"stop":1702358250010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"返回的token值：75_ydKdJTqhkYHeAnBSN1saTK26sQficbVgeXkxc4LI4gzUAFaRGUK08shdxsnz0GMgIwkWBOWX7SNtTJ-I_v2Z0MsljHbu4tsJXVhnVPUBUUW8uwsTq-qrMjCHOpcGDDhAJAWTT","time":{"start":1702358251319,"stop":1702358253378,"duration":2059},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[{"name":"casein","value":"{'name': '获取token', 'request': {'method': 'get', 'url': 'https://api.weixin.qq.com/cgi-bin/token', 'data': {'grant_type': 'client_credential', 'appid': 'wx6b11b3efd1cdc290', 'secret': '106a9c6157c4db5f6029918738f9529d'}}, 'validate': {'eq': {'expires_in': 7200}}}"}],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":4,"hasContent":true}],"attachments":[{"uid":"aaf187e7ab6fa9b9","name":"log","source":"aaf187e7ab6fa9b9.txt","type":"text/plain","size":1487}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":5,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"获取token"},{"name":"feature","value":"接口测试用例"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"testrequest"},{"name":"subSuite","value":"TestSendRequest"},{"name":"host","value":"changgp"},{"name":"thread","value":"9636-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.testrequest"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"casein","value":"{'name': '获取token', 'request': {'method': 'get', 'url': 'https://api.weixin.qq.com/cgi-bin/token', 'data': {'grant_type': 'client_credential', 'appid': 'wx6b11b3efd1cdc290', 'secret': '106a9c6157c4db5f6029918738f9529d'}}, 'validate': {'eq': {'expires_in': 7200}}}"}],"links":[{"type":"链接地址"},{"name":"bug地址","type":"issue"},{"name":"测试用例地址","url":"LoginTest/test_case/testrequest.py","type":"test_case"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":11},"items":[{"uid":"2ae25c84538ddfc3","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/1/allure/#testresult/2ae25c84538ddfc3","status":"passed","time":{"start":1693545931686,"stop":1693545933546,"duration":1860}},{"uid":"b1c73c9b8b0b6906","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/11/allure/#testresult/b1c73c9b8b0b6906","status":"passed","time":{"start":1683175118942,"stop":1683175119402,"duration":460}},{"uid":"4c0ff531cb8bb772","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/10/allure/#testresult/4c0ff531cb8bb772","status":"passed","time":{"start":1682672450043,"stop":1682672450448,"duration":405}},{"uid":"e764df36dc43306f","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/9/allure/#testresult/e764df36dc43306f","status":"passed","time":{"start":1682662532714,"stop":1682662533217,"duration":503}},{"uid":"aeb2adc68b5af99f","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/8/allure/#testresult/aeb2adc68b5af99f","status":"passed","time":{"start":1682661159932,"stop":1682661160397,"duration":465}},{"uid":"dfa1510679c1debb","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/7/allure/#testresult/dfa1510679c1debb","status":"passed","time":{"start":1682659695213,"stop":1682659695669,"duration":456}},{"uid":"f8f7c1c46538d91c","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/5/allure/#testresult/f8f7c1c46538d91c","status":"passed","time":{"start":1682562376359,"stop":1682562376878,"duration":519}},{"uid":"6055b65b355ca8f3","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/4/allure/#testresult/6055b65b355ca8f3","status":"passed","time":{"start":1682562146291,"stop":1682562147191,"duration":900}},{"uid":"d469ebdf6995ee97","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/3/allure/#testresult/d469ebdf6995ee97","status":"passed","time":{"start":1682501069007,"stop":1682501069472,"duration":465}},{"uid":"a8bff72b21dacdf4","reportUrl":"http://127.0.0.1:8080/job/pytest%20allure/2/allure/#testresult/a8bff72b21dacdf4","status":"passed","time":{"start":1682500647088,"stop":1682500647506,"duration":418}}]},"tags":[]},"source":"3c6fa431f32bcd29.json","parameterValues":["{'name': '获取token', 'request': {'method': 'get', 'url': 'https://api.weixin.qq.com/cgi-bin/token', 'data': {'grant_type': 'client_credential', 'appid': 'wx6b11b3efd1cdc290', 'secret': '106a9c6157c4db5f6029918738f9529d'}}, 'validate': {'eq': {'expires_in': 7200}}}"]}